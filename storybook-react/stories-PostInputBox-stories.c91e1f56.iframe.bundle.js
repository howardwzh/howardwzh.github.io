"use strict";(self.webpackChunkstorybook_react=self.webpackChunkstorybook_react||[]).push([[478],{"./src/stories/PostInputBox.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,FullFeaturedExample:()=>FullFeaturedExample,WithAutocomplete:()=>WithAutocomplete,WithEmoji:()=>WithEmoji,WithInitialContent:()=>WithInitialContent,__namedExportsOrder:()=>__namedExportsOrder,default:()=>PostInputBox_stories});var react=__webpack_require__("./node_modules/react/index.js"),lib=__webpack_require__("./node_modules/react-quill/lib/index.js"),lib_default=__webpack_require__.n(lib),jsx_runtime=(__webpack_require__("./node_modules/react-quill/dist/quill.snow.css"),__webpack_require__("./node_modules/react/jsx-runtime.js"));const formats=["header","bold","underline","list","link"],customModule={toolbar:[[{header:[1,2,!1]}],["bold","underline"],["list","bullet"]]},PostInputBox=()=>{const[content,setContent]=(0,react.useState)("");return(0,jsx_runtime.jsx)("div",{className:"post-input-box",children:(0,jsx_runtime.jsx)(lib_default(),{value:content,onChange:value=>{setContent(value)},modules:customModule,formats})})},components_PostInputBox=PostInputBox;PostInputBox.__docgenInfo={description:"",methods:[],displayName:"PostInputBox"};const PostInputBox_stories={title:"Components/PostInputBox",component:components_PostInputBox,tags:["autodocs"]},Default={args:{}},WithInitialContent={args:{},decorators:[Story=>(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("p",{children:"Try typing a link (e.g., https://example.com), a mention (@username), or a hashtag (#topic):"}),(0,jsx_runtime.jsx)(Story,{})]})]},WithEmoji={args:{},decorators:[Story=>(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("p",{children:"Try typing an emoji (e.g., ðŸ˜Š or ðŸš€):"}),(0,jsx_runtime.jsx)(Story,{})]})]},WithAutocomplete={args:{},decorators:[Story=>(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("p",{children:"Try typing @ to see user suggestions (e.g., @John, @Mary):"}),(0,jsx_runtime.jsx)("p",{children:"Try typing # to see hashtag suggestions (e.g., #react, #javascript):"}),(0,jsx_runtime.jsx)(Story,{})]})]},FullFeaturedExample={args:{},decorators:[Story=>(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("p",{children:"This example showcases all features:"}),(0,jsx_runtime.jsxs)("ul",{children:[(0,jsx_runtime.jsx)("li",{children:"Rich text formatting (header, bold, underline, list)"}),(0,jsx_runtime.jsx)("li",{children:"Auto-detection of links, mentions, and hashtags"}),(0,jsx_runtime.jsx)("li",{children:"Emoji support with Twemoji style"}),(0,jsx_runtime.jsx)("li",{children:"Autocomplete for mentions and hashtags"})]}),(0,jsx_runtime.jsx)("p",{children:"Try the following:"}),(0,jsx_runtime.jsxs)("ol",{children:[(0,jsx_runtime.jsx)("li",{children:"Type a link: https://example.com"}),(0,jsx_runtime.jsx)("li",{children:"Use @username or #topic"}),(0,jsx_runtime.jsx)("li",{children:"Insert emojis: ðŸ˜ŠðŸš€"}),(0,jsx_runtime.jsx)("li",{children:"Start typing @ or # for autocomplete suggestions"})]}),(0,jsx_runtime.jsx)(Story,{})]})]},__namedExportsOrder=["Default","WithInitialContent","WithEmoji","WithAutocomplete","FullFeaturedExample"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Default.parameters?.docs?.source}}},WithInitialContent.parameters={...WithInitialContent.parameters,docs:{...WithInitialContent.parameters?.docs,source:{originalSource:"{\n  args: {},\n  decorators: [Story => <div>\n        <p>Try typing a link (e.g., https://example.com), a mention (@username), or a hashtag (#topic):</p>\n        <Story />\n      </div>]\n}",...WithInitialContent.parameters?.docs?.source}}},WithEmoji.parameters={...WithEmoji.parameters,docs:{...WithEmoji.parameters?.docs,source:{originalSource:"{\n  args: {},\n  decorators: [Story => <div>\n        <p>Try typing an emoji (e.g., ðŸ˜Š or ðŸš€):</p>\n        <Story />\n      </div>]\n}",...WithEmoji.parameters?.docs?.source}}},WithAutocomplete.parameters={...WithAutocomplete.parameters,docs:{...WithAutocomplete.parameters?.docs,source:{originalSource:"{\n  args: {},\n  decorators: [Story => <div>\n        <p>Try typing @ to see user suggestions (e.g., @John, @Mary):</p>\n        <p>Try typing # to see hashtag suggestions (e.g., #react, #javascript):</p>\n        <Story />\n      </div>]\n}",...WithAutocomplete.parameters?.docs?.source}}},FullFeaturedExample.parameters={...FullFeaturedExample.parameters,docs:{...FullFeaturedExample.parameters?.docs,source:{originalSource:"{\n  args: {},\n  decorators: [Story => <div>\n        <p>This example showcases all features:</p>\n        <ul>\n          <li>Rich text formatting (header, bold, underline, list)</li>\n          <li>Auto-detection of links, mentions, and hashtags</li>\n          <li>Emoji support with Twemoji style</li>\n          <li>Autocomplete for mentions and hashtags</li>\n        </ul>\n        <p>Try the following:</p>\n        <ol>\n          <li>Type a link: https://example.com</li>\n          <li>Use @username or #topic</li>\n          <li>Insert emojis: ðŸ˜ŠðŸš€</li>\n          <li>Start typing @ or # for autocomplete suggestions</li>\n        </ol>\n        <Story />\n      </div>]\n}",...FullFeaturedExample.parameters?.docs?.source}}}}}]);